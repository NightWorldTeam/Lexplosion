<Window
    x:Class="Lexplosion.WPF.NewInterface.Mvvm.Views.Windows.TestWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:converters="clr-namespace:Lexplosion.WPF.NewInterface.Core.Converters"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.Views.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="TestWindowName"
    Title="TestWindow"
    Height="450"
    MinWidth="200"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="ButtonFocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border
                            Margin="-7"
                            BorderBrush="{DynamicResource DefaultButtonBackgroundColorBrush}"
                            BorderThickness="3"
                            CornerRadius="22"
                            Opacity="0.4"
                            SnapsToDevicePixels="true" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type controls:AdvancedButton}}" TargetType="{x:Type controls:AdvancedButton}">
            <Setter Property="Background" Value="{DynamicResource DefaultButtonBackgroundColorBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForegroundColorBrush}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="32" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual1}" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverAccentColor}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PressedAccentColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource DisableAccentColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
            <!--<Setter Property="Width" Value="{Binding ActualWidth, ElementName=TestWindowName, Converter={converters:WindowWidthToXProcentWidth}, ConverterParameter=60}" />-->
        </Style>
    </Window.Resources>

    <Border Padding="32" Background="{DynamicResource PrimarySolidColorBrush}">
        <Border.LayoutTransform>
            <ScaleTransform ScaleX="1" ScaleY="1" />
        </Border.LayoutTransform>
        <Grid>
            <WrapPanel>
                <controls:AdvancedButton
                    Padding="32,6"
                    HorizontalAlignment="Center"
                    CornerRadius="15"
                    FontSize="14"
                    Text="Default" />

                <controls:AdvancedButton
                    Margin="8,0,0,0"
                    Padding="24,6,32,6"
                    CornerRadius="5"
                    FontSize="16"
                    Style="{StaticResource DefaultAdvancedButton}"
                    Text="Test" />

                <controls:AdvancedTextBox
                    x:Name="hex"
                    Width="120"
                    Margin="16,0,0,0" />
            </WrapPanel>
            <!--  Text="Test Label"  -->
            <!--  IconData="{StaticResource PDNightworld}"  -->


        </Grid>
    </Border>
</Window>
