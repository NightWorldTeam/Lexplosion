<UserControl
    x:Class="Lexplosion.WPF.NewInterface.Mvvm.Views.Pages.MainContent.MainMenu.AccountsSettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:accounts="clr-namespace:Lexplosion.Logic.Management.Accounts;assembly=Lexplosion.Core"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:converters="clr-namespace:Lexplosion.WPF.NewInterface.Core.Converters"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="clr-namespace:Lexplosion;assembly=Lexplosion.Core"
    xmlns:extensions="clr-namespace:Lexplosion.WPF.NewInterface.Extensions"
    xmlns:localVm="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.ViewModels.MainContent.MainMenu"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:objects="clr-namespace:Lexplosion.WPF.NewInterface.Core.Objects"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    d:DataContext="{d:DesignInstance Type=localVm:AccountsSettingsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <core:BindingProxy x:Key="ViewModel" Data="{Binding}" />

        <Style x:Key="AccountDropDownButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Margin="1"
                            Padding="5,2,5,2"
                            Background="Transparent"
                            CornerRadius="5">

                            <Grid Margin="5,3,5,3" ShowGridLines="False">

                                <TextBlock
                                    x:Name="TextBlock"
                                    Margin="0,0,5,0"
                                    FontSize="14"
                                    Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Justify" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.1" Color="{DynamicResource ActivityColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="TextBlock" Property="TextElement.Foreground" Value="{DynamicResource ActivitySolidColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type objects:AccountItem}">
            <Border
                Padding="8,8,0,8"
                BorderBrush="{DynamicResource PageItemSeparatorSolidColorBrush}"
                BorderThickness="0,0,0,1">
                <Grid ShowGridLines="False">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="login" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  Profile Button  -->
                    <Border
                        Width="32"
                        Height="32"
                        CornerRadius="5">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding Account.HeadImageUrl}" />
                        </Border.Background>
                    </Border>

                    <!--  Login & Login  -->
                    <StackPanel Grid.Column="1" Margin="8,0,0,0">
                        <TextBlock
                            FontSize="16"
                            FontWeight="Medium"
                            Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                            Text="{Binding Account.Login}" />
                        <TextBlock
                            Margin="0,4,0,0"
                            FontSize="14"
                            Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                            Text="{Binding Account.Login}" />
                    </StackPanel>

                    <StackPanel
                        Grid.Column="2"
                        Margin="8,0,0,0"
                        Orientation="Horizontal">

                        <core:If Condition="{Binding Account.IsAuthInProcess, UpdateSourceTrigger=PropertyChanged}">
                            <core:If.True>
                                <Border
                                    Height="24"
                                    Margin="0,0,8,0"
                                    Padding="8,3,8,6"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="Black"
                                    CornerRadius="5">
                                    <Grid>
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="14"
                                            FontWeight="Medium"
                                            Foreground="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                            Text="{DynamicResource AuthorizationProcessInProgress}" />
                                        <ProgressBar
                                            Height="4"
                                            Margin="-8,-6"
                                            VerticalAlignment="Bottom"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            IsIndeterminate="True" />
                                    </Grid>
                                </Border>
                            </core:If.True>
                        </core:If>

                        <!--  Active Status  -->
                        <core:If Condition="{Binding Account.IsActive}" Visibility="{Binding IsNightWorldAccount, Converter={converters:BooleanToVisibilityConverter}}">
                            <core:If.True>
                                <Border
                                    Height="24"
                                    Padding="8,3,8,6"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{DynamicResource ActivitySolidColorBrush}"
                                    CornerRadius="5">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        FontWeight="Medium"
                                        Foreground="{DynamicResource DefaultButtonForegroundColorBrush}"
                                        Text="{DynamicResource Active}" />
                                </Border>
                            </core:If.True>
                            <core:If.False>
                                <Border
                                    Height="24"
                                    Margin="0,0,0,0"
                                    Padding="8,3,8,6"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="Gray"
                                    CornerRadius="5">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        FontWeight="Medium"
                                        Foreground="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                        Text="{DynamicResource NotActive}" />
                                </Border>
                            </core:If.False>
                        </core:If>

                        <!--  Launch Account  -->
                        <core:If Condition="{Binding Account.IsLaunch, UpdateSourceTrigger=PropertyChanged}">
                            <core:If.True>
                                <Border
                                    Height="24"
                                    Margin="8,0,0,0"
                                    Padding="8,3,8,6"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="Green"
                                    CornerRadius="5">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        FontWeight="Medium"
                                        Foreground="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                        Text="{DynamicResource GameLauncher}" />
                                </Border>
                            </core:If.True>
                            <core:If.False>
                                <x:Null />
                            </core:If.False>
                        </core:If>

                        <Border
                            Height="24"
                            Margin="8,0,0,0"
                            Padding="8,3,8,6"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="DarkRed"
                            CornerRadius="5">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Account.AuthorizationCodeResult}" Value="{x:Static enums:AuthCode.Successfully}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="Medium"
                                Foreground="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                Text="Токен устарел" />
                        </Border>
                    </StackPanel>

                    <StackPanel
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">

                        <!--  Activate Button  -->

                        <!--  Do Launch  -->

                        <!--  Sing-out  -->

                        <Button
                            Margin="8,0,0,0"
                            Command="{Binding Data.ActivateAccountCommand, Source={StaticResource ViewModel}}"
                            CommandParameter="{Binding Account}"
                            Content="FlashOn"
                            Foreground="{DynamicResource ActivitySolidColorBrush}"
                            ToolTip="{DynamicResource MakeAccountActive}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource x32IconButtonActivityColor}" TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsNightWorldAccount}" Value="True" />
                                                <Condition Binding="{Binding Account.IsActive}" Value="False" />
                                                <Condition Binding="{Binding Account.IsTokenValid}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <core:If Condition="{Binding Account.IsLaunch}">
                            <core:If.False>
                                <Button
                                    Margin="8,0,0,0"
                                    Command="{Binding Data.DoAccountLauncherCommand, Source={StaticResource ViewModel}}"
                                    CommandParameter="{Binding Account}"
                                    Content="PlayArrow"
                                    Foreground="{DynamicResource ActivitySolidColorBrush}"
                                    Style="{StaticResource x32IconButtonActivityColor}"
                                    ToolTip="{DynamicResource LaunchAccount}" />
                            </core:If.False>
                        </core:If>

                        <Button
                            Margin="8,0,0,0"
                            Command="{Binding Data.ReauthAccountCommand, Source={StaticResource ViewModel}}"
                            CommandParameter="{Binding Account}"
                            Content="Reload"
                            Foreground="{DynamicResource ActivitySolidColorBrush}"
                            Style="{StaticResource x32IconButtonActivityColor}"
                            ToolTip="{DynamicResource ReloadAccount}" />

                        <Button
                            Margin="8,0,0,0"
                            Command="{Binding Data.SingOutCommand, Source={StaticResource ViewModel}}"
                            CommandParameter="{Binding Account}"
                            Content="Logout"
                            Foreground="Red"
                            Style="{StaticResource x32IconButtonActivityColor}"
                            ToolTip="{DynamicResource LogoutAccount}" />
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>

        <CollectionViewSource x:Key="AccountSourceView" Source="{Binding Model.Accounts}" />
    </UserControl.Resources>

    <Grid Margin="32,16,32,16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />

        </Grid.ColumnDefinitions>

        <controls:SearchBox
            Grid.Column="0"
            Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
            Placeholder="{DynamicResource TypingNicknamePlaceholder}"
            Text="{Binding Model.SearchBoxText, UpdateSourceTrigger=PropertyChanged}" />

        <StackPanel
            Grid.Column="1"
            Margin="8,0,0,0"
            Orientation="Horizontal">

            <controls:AdvancedButton
                Command="{Binding OpenAccountFactoryCommand}"
                IconData="{DynamicResource PDAddCircle}"
                IconPadding="2"
                Style="{DynamicResource DefaultAdvancedButton}"
                ToolTip="{DynamicResource AddNewAccount}"
                ToolTipService.PlacementRectangle="16,56,0,0" />
            <Button
                Width="32"
                Height="32"
                Margin="8,0,0,0"
                Command="{Binding SingOutAllCommand}"
                Content="AccountGroupRemove"
                Foreground="Red"
                Style="{StaticResource x32IconButtonActivityColor}"
                ToolTip="{DynamicResource LogoutAllAccounts}"
                ToolTipService.PlacementRectangle="16,56,0,0" />
        </StackPanel>

        <ListBox
            Grid.Row="1"
            Grid.ColumnSpan="3"
            Margin="0,24,-32,0"
            IsEnabled="True"
            ItemsSource="{Binding Source={StaticResource AccountSourceView}}"
            Style="{StaticResource TransparentListBox}">
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Border
                                Margin="0,0,32,0"
                                Padding="0,0,0,8"
                                VerticalAlignment="Top"
                                BorderBrush="{DynamicResource PageItemSeparatorSolidColorBrush}"
                                BorderThickness="0,0,0,2">
                                <StackPanel Orientation="Horizontal">
                                    <Border
                                        Width="28"
                                        Height="28"
                                        Margin="0,0,8,0">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding Name.IconSource, Converter={converters:ImagePathValidateConverter}}" />
                                        </Border.Background>
                                    </Border>

                                    <TextBlock
                                        FontSize="16"
                                        FontWeight="Medium"
                                        Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                        Text="{Binding Name.Type, Converter={converters:ToStringConverter}}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListBox.GroupStyle>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="0,0,32,24" Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </Grid>
</UserControl>
