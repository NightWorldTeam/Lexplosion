<UserControl
    x:Class="Lexplosion.WPF.NewInterface.Mvvm.Views.Pages.MainContent.InstanceProfile.InstanceProfileVersionsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:instanceprofile="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.ViewModels.MainContent.InstanceProfile"
    xmlns:lexplosion="clr-namespace:Lexplosion;assembly=Lexplosion.Core"
    xmlns:local="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.Views.Pages.MainContent.InstanceProfile"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:objects="clr-namespace:Lexplosion.Logic.Objects;assembly=Lexplosion.Core"
    d:DataContext="{d:DesignInstance Type=instanceprofile:InstanceProfileVersionsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">


    <UserControl.Resources>
        <core:BindingProxy x:Key="ViewModel" Data="{Binding}" />

        <DataTemplate DataType="{x:Type objects:InstanceVersion}">
            <Border
                Margin="0,16,0,0"
                Padding="0,0,0,16"
                BorderBrush="{DynamicResource PageItemSeparatorSolidColorBrush}"
                BorderThickness="0,0,0,1">
                <Grid Height="36">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Width="36"
                        Height="36"
                        Margin="0,0,8,0"
                        CornerRadius="5">

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>

                                    <!--  TODO: Вынести в отдельные стили  -->
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Release}">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="0.3" Color="Green" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Beta}">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="0.3" Color="Orange" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Alpha}">
                                        <Setter Property="Border.Background">
                                            <Setter.Value>
                                                <SolidColorBrush Opacity="0.3" Color="Purple" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="16"
                            FontWeight="Bold">
                            <TextBlock.Style>

                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="FontSize" Value="18" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontWeight" Value="Medium" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Release}">
                                            <Setter Property="TextBlock.Text" Value="R" />
                                            <Setter Property="Foreground" Value="Green" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Beta}">
                                            <Setter Property="TextBlock.Text" Value="B" />
                                            <Setter Property="Foreground" Value="Orange" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ReleaseType.Alpha}">
                                            <Setter Property="TextBlock.Text" Value="A" />
                                            <Setter Property="Foreground" Value="Purple" />
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>

                            </TextBlock.Style>
                        </TextBlock>
                    </Border>

                    <!--  Version  -->
                    <Grid Grid.Column="1">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition
                                Width="Auto"
                                MinWidth="60"
                                MaxWidth="60"
                                SharedSizeGroup="GameVersion" />
                            <ColumnDefinition
                                Width="Auto"
                                MinWidth="90"
                                MaxWidth="90"
                                SharedSizeGroup="Modloader" />
                        </Grid.ColumnDefinitions>

                        <StackPanel
                            Margin="0,0,0,2"
                            VerticalAlignment="Center"
                            Background="Transparent">
                            <TextBlock
                                FontWeight="Medium"
                                Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Text="{Binding FileName}" />
                            <TextBlock
                                FontSize="12"
                                FontWeight="Medium"
                                Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                Text="{Binding Date, StringFormat=dd.MM.yyyy}" />
                        </StackPanel>

                        <Border
                            Grid.Column="1"
                            Margin="16,0,0,0"
                            Padding="8"
                            BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                            BorderThickness="1,0,0,0">

                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="Medium"
                                Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                Text="{Binding GameVersion}" />
                        </Border>

                        <Border
                            Grid.Column="2"
                            Margin="8,0,0,0"
                            Padding="8,0"
                            BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                            BorderThickness="1,0">

                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="14"
                                FontWeight="Medium"
                                Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                Text="{Binding Modloader}" />
                        </Border>
                    </Grid>

                    <Grid Grid.Column="2" Margin="16,0,0,0">
                        <StackPanel Orientation="Horizontal">

                            <core:If Margin="8,0,0,0" Condition="{Binding IsDownloading}">
                                <core:If.True>
                                    <Grid>

                                        <controls:CircleLoader
                                            x:Name="ActiveLoader"
                                            Width="22"
                                            Height="22"
                                            Margin="10,0,0,0"
                                            Background="Transparent"
                                            IsActive="{Binding IsDownloading, UpdateSourceTrigger=PropertyChanged}" />

                                        <Popup
                                            MinWidth="200"
                                            AllowsTransparency="True"
                                            Placement="Left"
                                            PlacementRectangle="-20,-5,0,0"
                                            PlacementTarget="{Binding Source={x:Reference ActiveLoader}}"
                                            PopupAnimation="Fade">

                                            <Popup.Style>
                                                <Style TargetType="Popup">

                                                    <Style.Triggers>
                                                        <!--  Триггер, который открывает Popup, если IsLoading=True и курсор на кнопке  -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <!--  Условие 1: IsLoading = True  -->
                                                                <Condition Binding="{Binding IsActive, Source={x:Reference ActiveLoader}}" Value="True" />
                                                                <!--  Условие 2: Лоадер под курсором  -->
                                                                <Condition Binding="{Binding IsMouseOver, Source={x:Reference ActiveLoader}}" Value="True" />
                                                            </MultiDataTrigger.Conditions>

                                                            <Setter Property="IsOpen" Value="True" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Popup.Style>

                                            <Border
                                                Padding="8,8"
                                                BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                                                BorderThickness="1"
                                                CornerRadius="5">

                                                <Border.Background>
                                                    <SolidColorBrush Opacity="1" Color="{DynamicResource PrimaryColor}" />
                                                </Border.Background>

                                                <core:If Condition="{Binding Data.Model.InstanceModel.DownloadCancelling, Source={StaticResource ViewModel}}">
                                                    <core:If.True>
                                                        <StackPanel>

                                                            <TextBlock
                                                                MaxWidth="200"
                                                                Margin="0,0,0,4"
                                                                HorizontalAlignment="Left"
                                                                FontSize="14"
                                                                TextWrapping="WrapWithOverflow">
                                                                <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{DynamicResource ProcessColon}" />
                                                                <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" Text="{DynamicResource DownloadCanceling}" />
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </core:If.True>
                                                    <core:If.False>

                                                        <StackPanel>

                                                            <TextBlock
                                                                MaxWidth="200"
                                                                Margin="0,0,0,4"
                                                                HorizontalAlignment="Left"
                                                                FontSize="14"
                                                                TextWrapping="WrapWithOverflow">
                                                                <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{DynamicResource ProcessColon}" />
                                                                <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" Text="{DynamicResource InstallingTheInstance}" />
                                                            </TextBlock>
                                                            <TextBlock
                                                                Margin="0,0,0,4"
                                                                HorizontalAlignment="Left"
                                                                FontSize="14"
                                                                Foreground="White">
                                                                <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{DynamicResource StageColon}" />
                                                                <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}">
                                                                    <Run.Text>
                                                                        <MultiBinding StringFormat="{}{0}/{1}">
                                                                            <Binding Path="Data.Model.InstanceModel.DownloadingData.CurrentStage" Source="{StaticResource ViewModel}" />
                                                                            <Binding Path="Data.Model.InstanceModel.DownloadingData.TotalStages" Source="{StaticResource ViewModel}" />
                                                                        </MultiBinding>
                                                                    </Run.Text>
                                                                </Run>
                                                            </TextBlock>
                                                            <TextBlock
                                                                Margin="0,0,0,4"
                                                                HorizontalAlignment="Left"
                                                                FontSize="14"
                                                                Foreground="White">
                                                                <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{DynamicResource FilesColon}" />
                                                                <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}">
                                                                    <Run.Text>
                                                                        <MultiBinding StringFormat="{}{0}/{1}">
                                                                            <Binding Path="Data.Model.InstanceModel.DownloadingData.FilesCounts" Source="{StaticResource ViewModel}" />
                                                                            <Binding Path="Data.Model.InstanceModel.DownloadingData.TotalFiles" Source="{StaticResource ViewModel}" />
                                                                        </MultiBinding>
                                                                    </Run.Text>
                                                                </Run>
                                                            </TextBlock>
                                                            <TextBlock
                                                                HorizontalAlignment="Left"
                                                                FontSize="14"
                                                                Foreground="White">
                                                                <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{DynamicResource TotalDonwloadedColon}" />
                                                                <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" Text="{Binding Data.Model.InstanceModel.DownloadingData.Percentages, Source={StaticResource ViewModel}, Mode=OneWay, StringFormat='{}{0}%'}" />
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </core:If.False>
                                                </core:If>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </core:If.True>
                                <core:If.False>
                                    <controls:AdvancedButton
                                        Command="{Binding Data.InstallInstanceVersionCommand, Source={StaticResource ViewModel}}"
                                        CommandParameter="{Binding}"
                                        FontSize="16"
                                        IconData="{StaticResource PDDownload}"
                                        IsEnabled="{Binding CanInstall}"
                                        Style="{DynamicResource sm-icon-button}" />
                                </core:If.False>
                            </core:If>

                            <controls:AdvancedButton
                                Margin="8,0,0,0"
                                Command="{Binding Data.VisitWebsiteCommand, Source={StaticResource ViewModel}}"
                                CommandParameter="{Binding}">
                                <controls:AdvancedButton.Style>
                                    <Style BasedOn="{StaticResource sm-icon-button}" TargetType="{x:Type controls:AdvancedButton}">

                                        <Style.Triggers>

                                            <DataTrigger Binding="{Binding Data.Model.InstanceModel.Source, Source={StaticResource ViewModel}}" Value="{x:Static lexplosion:InstanceSource.Curseforge}">
                                                <Setter Property="IconData" Value="{StaticResource PDCurseforge}" />
                                                <Setter Property="ToolTip" Value="{StaticResource VisitCurseforge}" />
                                                <Setter Property="FontSize" Value="12" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Data.Model.InstanceModel.Source, Source={StaticResource ViewModel}}" Value="{x:Static lexplosion:InstanceSource.Modrinth}">
                                                <Setter Property="IconData" Value="{StaticResource PDModrinth}" />
                                                <Setter Property="ToolTip" Value="{StaticResource VisitModrinth}" />
                                                <Setter Property="FontSize" Value="17" />
                                            </DataTrigger>

                                        </Style.Triggers>

                                    </Style>
                                </controls:AdvancedButton.Style>
                            </controls:AdvancedButton>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>


    <Grid Margin="32,0,0,0" Grid.IsSharedSizeScope="True">
        <core:If Condition="{Binding Model.IsLoading}">
            <core:If.True>
                <controls:LoadingBoard
                    Margin="-32,0,0,0"
                    Background="Black"
                    BackgroundOpacity="0.3"
                    IsActive="{Binding Model.IsLoading}"
                    Placeholder="{DynamicResource LoadingInstanceClientVersions}" />
            </core:If.True>
            <core:If.False>
                <ListBox
                    Padding="0,0,32,0"
                    ItemsSource="{Binding Model.Versions}"
                    Style="{StaticResource TransparentListBox}" />
            </core:If.False>
        </core:If>
    </Grid>
</UserControl>
