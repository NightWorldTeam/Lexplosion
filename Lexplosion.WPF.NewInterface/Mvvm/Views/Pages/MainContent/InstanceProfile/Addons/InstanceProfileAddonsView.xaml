<UserControl
    x:Class="Lexplosion.WPF.NewInterface.Mvvm.Views.Pages.MainContent.InstanceProfile.InstanceProfileAddonsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:controls1="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extension="clr-namespace:Lexplosion.WPF.NewInterface.Extensions"
    xmlns:local="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.Views.Pages.MainContent.InstanceProfile"
    xmlns:logicInstances="clr-namespace:Lexplosion.Logic.Management.Instances;assembly=Lexplosion.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueconverters="clr-namespace:Lexplosion.WPF.NewInterface.Core.Converters"
    mc:Ignorable="d">

    <UserControl.Resources>

        <Style
            x:Key="RotateAnimatedButton"
            BasedOn="{StaticResource IconButton}"
            TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="ButtonBorder"
                            Background="Transparent"
                            RenderTransformOrigin="0.5, 0.5">

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                            <Border.RenderTransform>
                                <RotateTransform Angle="0" />
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsRefreshingDLC}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="BorderBeginStoryboard">
                                        <Storyboard Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)">
                                            <DoubleAnimation
                                                RepeatBehavior="Forever"
                                                From="0"
                                                To="360"
                                                Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>

                                <DataTrigger.ExitActions>
                                    <PauseStoryboard BeginStoryboardName="BorderBeginStoryboard" />
                                    <BeginStoryboard x:Name="BorderEndBeginStoryboard">
                                        <Storyboard Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)">
                                            <DoubleAnimation To="360" Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>

                                <Setter Property="Opacity" Value="0.8" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding IsInstalling}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="AddonBorderBeginStoryboard">
                                        <Storyboard Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)">
                                            <DoubleAnimation
                                                RepeatBehavior="Forever"
                                                From="0"
                                                To="360"
                                                Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>

                                <DataTrigger.ExitActions>
                                    <PauseStoryboard BeginStoryboardName="AddonBorderBeginStoryboard" />
                                    <BeginStoryboard x:Name="AddonBorderEndBeginStoryboard">
                                        <Storyboard Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="(Border.RenderTransform).(RotateTransform.Angle)">
                                            <DoubleAnimation To="360" Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>

                                <Setter Property="Opacity" Value="0.8" />
                            </DataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="MaxWidth" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border
                            x:Name="Border"
                            Padding="2"
                            Background="Transparent"
                            BorderThickness="1"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.2" Color="{DynamicResource ActivityColor}" />
                                    </Setter.Value>
                                </Setter>-->
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActivitySolidColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="95" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border
                            Name="Border"
                            Padding="4"
                            BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <ScrollViewer Margin="0" Focusable="false">
                                <StackPanel IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>

                                </Setter>-->
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="RectInstanceAddon" DataType="{x:Type logicInstances:InstanceAddon}">
            <Border
                Width="217"
                Height="200"
                Margin="0,8,8,0"
                Padding="8"
                HorizontalAlignment="Center"
                Background="{DynamicResource PrimarySolidColorBrush}"
                BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                BorderThickness="1"
                CornerRadius="10">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Width="64"
                                Height="64"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{Binding Logo, Converter={valueconverters:ImageSourceNullValidateConverter}}"
                                CornerRadius="5" />

                            <StackPanel Grid.Column="1" Margin="8,0,0,0">

                                <TextBlock
                                    FontWeight="Bold"
                                    Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                    Text="{Binding Name}"
                                    TextWrapping="WrapWithOverflow" />
                                <TextBlock>
                                    <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" Text="by" />
                                    <Run Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" Text="{Binding Author}" />
                                </TextBlock>
                            </StackPanel>
                        </Grid>

                        <core:If Condition="{Binding Version, Converter={valueconverters:IsStringNullOrEmptyConverter}}">
                            <core:If.False>
                                <StackPanel Margin="0,8,0,0" Visibility="{Binding Version, Converter={valueconverters:IsStringNullOrEmptyConverter}}">
                                    <TextBlock Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}" TextWrapping="WrapWithOverflow">
                                        <Run FontWeight="Medium" Text="Version:" />
                                        <Run Text="{Binding Version, Mode=OneWay}" />
                                    </TextBlock>
                                </StackPanel>
                            </core:If.False>
                        </core:If>

                        <StackPanel Margin="0,8,0,0">
                            <TextBlock
                                FontWeight="Medium"
                                Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Text="File Name:" />

                            <TextBlock
                                Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Text="{Binding FileName}"
                                TextWrapping="Wrap" />
                        </StackPanel>
                    </StackPanel>

                    <Border
                        Grid.Row="1"
                        Padding="0,4,0,0"
                        HorizontalAlignment="Stretch"
                        BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                        BorderThickness="0,1,0,0"
                        CornerRadius="10">
                        <WrapPanel HorizontalAlignment="Center">
                            <Button
                                Height="12"
                                Command="{Binding DataContext.OpenExternalResourceCommand, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                CommandParameter="{Binding}"
                                Content="Curseforge"
                                Style="{StaticResource x32IconButtonWithHover}" />

                            <Button
                                Height="16"
                                Content="Update"
                                Style="{StaticResource x32IconButtonWithHover}"
                                Visibility="{Binding UpdateAvailable, UpdateSourceTrigger=PropertyChanged, Converter={valueconverters:BooleanToVisibilityConverter}}" />

                            <Button
                                Height="16"
                                Content="Delete"
                                Style="{StaticResource x32IconButtonWithHover}" />

                            <!--  Addon Switch Enable  -->
                            <ToggleButton
                                Margin="8,0,0,0"
                                IsChecked="{Binding IsEnable}"
                                Style="{StaticResource EllipseToggleButton}" />
                        </WrapPanel>
                    </Border>
                </Grid>
            </Border>
        </DataTemplate>

        <ControlTemplate x:Key="DLCHeaderControlTemplate">
            <Border
                HorizontalAlignment="Stretch"
                BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                BorderThickness="1"
                CornerRadius="5">
                <ScrollViewer>
                    <ItemsPresenter
                        VirtualizingPanel.ScrollUnit="Pixel"
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling" />
                </ScrollViewer>
            </Border>
        </ControlTemplate>

        <DataTemplate x:Key="LibeInstanceAddon" DataType="{x:Type logicInstances:InstanceAddon}">
            <Border BorderBrush="{DynamicResource SeparateSolidColorBrush}" BorderThickness="0,0,0,1">
                <Grid
                    Height="60"
                    HorizontalAlignment="Stretch"
                    Background="Transparent"
                    ShowGridLines="False">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Width="48"
                        Height="48"
                        Margin="4,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Background="{Binding Logo, Converter={valueconverters:ImageSourceNullValidateConverter}}"
                        CornerRadius="5" />

                    <Grid
                        Grid.Column="1"
                        Height="48"
                        Margin="8,0,0,0"
                        VerticalAlignment="Center">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                FontSize="14"
                                FontWeight="Medium"
                                Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Text="{Binding Name}" />

                            <Border
                                Margin="12,0,0,0"
                                Padding="12,0,0,0"
                                BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                                BorderThickness="2,0,0,0">
                                <TextBlock FontSize="14">
                                    <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="by" />
                                    <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{Binding Author}" />
                                </TextBlock>
                            </Border>

                            <core:If Condition="{Binding Version, Converter={valueconverters:IsStringNullOrEmptyConverter}}">
                                <core:If.False>
                                    <Border
                                        Margin="12,0,0,0"
                                        Padding="12,0,0,0"
                                        BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                                        BorderThickness="2,0,0,0">
                                        <TextBlock FontSize="14">
                                            <Run Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{Binding Version, Mode=OneWay}" />
                                        </TextBlock>
                                    </Border>
                                </core:If.False>
                            </core:If>

                        </StackPanel>

                        <StackPanel Grid.Row="1" Margin="0,4,0,0">
                            <TextBlock Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}" Text="{Binding FileName}" />
                        </StackPanel>
                    </Grid>

                    <WrapPanel
                        Grid.Column="3"
                        Margin="4,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">

                        <!--  Addon update  -->
                        <Button Command="{Binding DataContext.UpdateCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Visibility="{Binding UpdateAvailable, UpdateSourceTrigger=PropertyChanged, Converter={valueconverters:BooleanToVisibilityConverter}}">
                            <Viewbox Height="16" Margin="4,0,0,0">
                                <Path
                                    extension:Path.StringKeyData="Reload"
                                    Fill="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                    Stretch="Fill" />
                            </Viewbox>
                        </Button>

                        <!--  Addon Switch Enable  -->
                        <ToggleButton
                            Margin="8,0,0,0"
                            IsChecked="{Binding IsEnable}"
                            Style="{StaticResource EllipseToggleButton}" />

                        <!--  Addon External Link  -->
                        <Button Margin="8,0,0,0" Style="{StaticResource IconButton}">
                            <Viewbox Height="12">
                                <Path
                                    extension:Path.StringKeyData="Curseforge"
                                    Fill="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                    Stretch="Fill" />
                            </Viewbox>
                        </Button>

                        <!--  Addon Uninstall  -->
                        <Button
                            Margin="8,0,0,0"
                            Command="{Binding DataContext.UninstallCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                            Content="Delete"
                            Foreground="Red"
                            Style="{StaticResource x32IconButtonActivityColor}" />
                    </WrapPanel>
                </Grid>
            </Border>
        </DataTemplate>

        <ControlTemplate x:Key="RectInstanceHeaderControlTemplate">
            <ScrollViewer HorizontalAlignment="Stretch">
                <ItemsPresenter
                    Margin="0,0,-10,0"
                    VirtualizingPanel.ScrollUnit="Pixel"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling" />
            </ScrollViewer>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <controls:SearchBox
            x:Name="SearchBox"
            Height="0"
            Margin="4,4,4,0"
            Text="{Binding Model.SearchBoxText, UpdateSourceTrigger=PropertyChanged}">

            <controls:SearchBox.Style>
                <Style BasedOn="{StaticResource {x:Type controls:SearchBox}}" TargetType="{x:Type controls:SearchBox}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Model.IsSearchEnabled, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Height">
                                        <DoubleAnimation
                                            From="0"
                                            To="40"
                                            Duration="0:0:0.24" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Height">
                                        <DoubleAnimation
                                            From="40"
                                            To="0"
                                            Duration="0:0:0.24" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:SearchBox.Style>

        </controls:SearchBox>

        <!--  TODO: Scrool To Start  -->
        <!--  TODO: IconButton MouseOver fill Activity Color  -->

        <controls:Loader Grid.Row="1" IsActive="{Binding Model.IsAddonsLoading, UpdateSourceTrigger=PropertyChanged}">
            <core:If Condition="{Binding IsCurrentFormatBlock, UpdateSourceTrigger=PropertyChanged}">
                <core:If.True>
                    <controls1:VirtualizingItemsControl
                        Margin="0,8"
                        ItemTemplate="{StaticResource RectInstanceAddon}"
                        ItemsSource="{Binding Model.InstanceAddonCollectionViewSource.View}"
                        Template="{StaticResource RectInstanceHeaderControlTemplate}"
                        VirtualizingPanel.CacheLengthUnit="Item"
                        VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                        VirtualizingPanel.ScrollUnit="Pixel"
                        VirtualizingPanel.VirtualizationMode="Recycling"
                        Visibility="{Binding IsCurrentFormatBlock, Converter={valueconverters:BooleanToVisibilityConverter}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls1:VirtualizingWrapPanel
                                    HorizontalAlignment="Stretch"
                                    Orientation="Horizontal"
                                    SpacingMode="StartAndEndOnly"
                                    StretchItems="False" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </controls1:VirtualizingItemsControl>
                </core:If.True>
                <core:If.False>
                    <ListBox
                        Margin="4,8,4,8"
                        ItemTemplate="{StaticResource LibeInstanceAddon}"
                        ItemsSource="{Binding Model.InstanceAddonCollectionViewSource.View}"
                        Template="{StaticResource DLCHeaderControlTemplate}"
                        VirtualizingPanel.ScrollUnit="Pixel"
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling"
                        Visibility="{Binding IsCurrentFormatBlock, UpdateSourceTrigger=PropertyChanged, Converter={valueconverters:NegativeBooleanToVisibilityConverter}}" />
                </core:If.False>
            </core:If>
        </controls:Loader>

        <!--  TODO: Translate  -->
        <TextBlock
            Grid.RowSpan="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="18"
            Text="Дополнения отсутствуют"
            Visibility="{Binding DataContext.Model.IsEmptyAddonsList, Converter={valueconverters:BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
    </Grid>
</UserControl>
