<UserControl
    x:Class="Lexplosion.WPF.NewInterface.Controls.OldInstanceForm.OldInstanceForm"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:converters="clr-namespace:Lexplosion.WPF.NewInterface.Core.Converters"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Lexplosion.WPF.NewInterface.Extensions"
    xmlns:instancemodel="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.Models.Mvvm.InstanceModel"
    xmlns:lexplosion="clr-namespace:Lexplosion;assembly=Lexplosion.Core"
    xmlns:local="clr-namespace:Lexplosion.WPF.NewInterface.Controls.OldInstanceForm"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Lexplosion.WPF.NewInterface.Mvvm.Models"
    xmlns:objects="clr-namespace:Lexplosion.Logic.Objects;assembly=Lexplosion.Core"
    d:DataContext="{d:DesignInstance Type=instancemodel:InstanceModelBase}"
    d:DesignHeight="120"
    d:DesignWidth="597"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ControlTemplate x:Key="DropDownButton" TargetType="{x:Type controls:AdvancedButton}">
            <Border
                x:Name="border"
                Margin="1"
                Padding="5,2,5,2"
                Background="Transparent"
                CornerRadius="5">

                <Grid Margin="5,3,5,3" ShowGridLines="False">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border
                        Padding="2"
                        Background="Transparent"
                        CornerRadius="5">
                        <Viewbox Width="20" Height="20">
                            <Path
                                x:Name="Path"
                                HorizontalAlignment="Center"
                                extensions:PathExtensions.StringData="{TemplateBinding IconData}"
                                Fill="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Stretch="Fill" />
                        </Viewbox>
                    </Border>

                    <TextBlock
                        x:Name="TextBlock"
                        Grid.Column="1"
                        Margin="7,0,5,0"
                        FontSize="12pt"
                        Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                        Text="{TemplateBinding Text}"
                        TextAlignment="Justify" />
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Opacity="0.1" Color="{DynamicResource ActivityColor}" />
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="TextBlock" Property="TextElement.Foreground" Value="{DynamicResource ActivitySolidColorBrush}" />

                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource ActivitySolidColorBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid>
        <Border
            Width="597"
            Height="120"
            MaxWidth="597"
            HorizontalAlignment="Stretch"
            Background="{DynamicResource InstanceFormSolidColorBrush}"
            BorderBrush="{DynamicResource InstanceFormBorderSolidColorBrush}"
            BorderThickness="1"
            CornerRadius="5">

            <Grid HorizontalAlignment="Stretch" ShowGridLines="False">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="60" />
                </Grid.ColumnDefinitions>

                <!--  Left Block  -->
                <Grid x:Name="PART_LogoBlock" MouseDown="PART_LogoBlock_MouseDown">
                    <!--  Avatar  -->
                    <!--  Circle loader here>???  -->
                    <Border
                        x:Name="PART_Logo"
                        Background="{Binding Logo, Converter={converters:ImageSourceNullValidateConverter}}"
                        CornerRadius="5" />

                    <core:If Condition="{Binding IsShareDownloading}">
                        <core:If.True>
                            <controls:CircleLoader
                                Width="32"
                                Height="32"
                                Padding="0"
                                BlurTarget="{Binding Source={x:Reference PART_Logo}}"
                                IsActive="{Binding IsShareDownloading}" />
                        </core:If.True>
                    </core:If>

                    <!--  More Button  -->
                    <Grid Opacity="0">
                        <Border CornerRadius="5">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.5" Color="Black" />
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="0" />
                            </Border.Effect>
                        </Border>


                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="22"
                            FontWeight="Bold"
                            Foreground="{DynamicResource CheckBoxMarkSolidColorBrush}"
                            Text="{DynamicResource More}" />

                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="1"
                                                        Duration="0:0:0.35" />

                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="1"
                                                        Duration="0:0:0.35" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        To="0"
                                                        Duration="0:0:0.35" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>

                    <!--  Modloader Icon  -->
                    <Border
                        x:Name="ModloaderIcon"
                        Width="20"
                        Height="20"
                        Margin="6"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="Transparent"
                        CornerRadius="0,5,0,5" />

                    <!--  Update Button  -->
                    <core:If Condition="{Binding HasAvailableUpdate}">
                        <core:If.True>
                            <Button
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Cursor="Hand"
                                MouseDown="UpdateIndicatorMouseDown">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Border
                                            x:Name="UpdateIndicator"
                                            Width="28"
                                            Height="28"
                                            CornerRadius="5,0,0,0">

                                            <Border.Background>
                                                <SolidColorBrush Opacity="0.5" Color="Black" />
                                            </Border.Background>

                                            <Viewbox Width="22" Height="22">
                                                <Path
                                                    Data="M 24.15 42 q -3.75 0 -7.05 -1.425 T 11.325 36.7 q -2.475 -2.45 -3.9 -5.75 Q 6 27.65 6 23.9 t 1.425 -7 q 1.425 -3.25 3.9 -5.675 Q 13.8 8.8 17.1 7.4 Q 20.4 6 24.15 6 q 4 0 7.575 1.75 t 6.175 4.8 v -5.3 h 3 v 10.4 H 30.45 v -3 h 5.25 q -2.2 -2.55 -5.175 -4.1 Q 27.55 9 24.15 9 q -6.25 0 -10.7 4.275 Q 9 17.55 9 23.75 q 0 6.35 4.4 10.8 Q 17.8 39 24.15 39 q 6.25 0 10.55 -4.4 Q 39 30.2 39 23.95 h 3 q 0 7.5 -5.2 12.775 T 24.15 42 Z m 6.1 -9.85 l -7.7 -7.6 v -10.7 h 3 v 9.45 L 32.4 30 Z"
                                                    Fill="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                                    Stretch="Fill" />
                                            </Viewbox>
                                        </Border>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </core:If.True>
                    </core:If>
                </Grid>

                <!--  Center Block  -->
                <Grid
                    Grid.Column="1"
                    Margin="8,0"
                    ShowGridLines="False">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>


                    <!--  Name and Author  -->
                    <Grid Margin="0,0,0,2">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  Name  -->
                        <TextBlock
                            Margin="0,4,0,0"
                            FontSize="20"
                            Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                            Text="{Binding Name}"
                            TextTrimming="CharacterEllipsis" />

                        <!--  Author  -->
                        <TextBlock
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                            Text="{Binding Author, StringFormat='by {0}'}" />
                    </Grid>


                    <Grid Grid.Row="1" ShowGridLines="False">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="26" />
                            <RowDefinition Height="4*" />
                        </Grid.RowDefinitions>

                        <!--  Description  -->
                        <TextBlock
                            Margin="0,0,0,4"
                            Background="Transparent"
                            FontSize="16"
                            Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                            TextTrimming="WordEllipsis"
                            TextWrapping="WrapWithOverflow">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AnyProcessActive}" Value="False">
                                            <Setter Property="Text" Value="{Binding Summary}" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>

                                        <!--  Подготовка к скачиванию  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding IsPrepare}" Value="True" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Text" Value="{DynamicResource DownloadPreparing}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Скачивание Java  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Java}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Text" Value="{DynamicResource JavaInstalling}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Скачивание игры  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="False" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Client}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Запуск игры Скачивание игры  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding IsLaunching}" Value="True" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>


                                        <!--  Проверка целостности игровых файлов  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsLaunching}" Value="True" />
                                                <Condition Binding="{Binding IsPrepare}" Value="True" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Text" Value="{DynamicResource VerifyIntegrityGameFiles}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Запуск игры  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsLaunching}" Value="True" />
                                                <Condition Binding="{Binding IsPrepare}" Value="False" />
                                                <Condition Binding="{Binding IsDownloading}" Value="False" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Text" Value="{DynamicResource GameLaunching}" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>


                                        <DataTrigger Binding="{Binding DownloadCancelling}" Value="True">
                                            <Setter Property="Text" Value="{DynamicResource DownloadCanceling}" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsInstanceCompleted}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!--  Downloading Message  -->
                        <TextBlock
                            Margin="0,0,0,4"
                            Background="Transparent"
                            FontSize="16"
                            Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                            TextTrimming="WordEllipsis"
                            TextWrapping="WrapWithOverflow">

                            <Run Text="{DynamicResource InstanceDownloading}" />
                            <Run Text="" />
                            <Run Text="{DynamicResource Stage}" />
                            <Run>
                                <Run.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DownloadingData.CurrentStage" />
                                        <Binding Path="DownloadingData.TotalStages" />
                                    </MultiBinding>
                                </Run.Text>
                            </Run>

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>

                                        <!--  Скачивание Java  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Client}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                        <!--  Download Share Message  -->
                        <core:If Margin="0,0,0,4" Condition="{Binding IsShareDownloading}">
                            <core:If.True>
                                <TextBlock
                                    Background="Transparent"
                                    FontSize="16"
                                    Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                    TextTrimming="WordEllipsis"
                                    TextWrapping="WrapWithOverflow">
                                    <Run Text="{DynamicResource Completed}" />
                                    <Run Text="{Binding InstanceDistribution.Percentages, Mode=OneWay, StringFormat='{}{0}%'}" />
                                </TextBlock>
                            </core:If.True>
                        </core:If>

                        <!--  Tags  -->
                        <ItemsControl
                            x:Name="PART_TagsPanel"
                            Grid.Row="1"
                            Margin="0,0,1,8"
                            ItemsSource="{Binding Tags}">

                            <ItemsControl.Style>
                                <Style TargetType="{x:Type ItemsControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AnyProcessActive}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type objects:CategoryBase}">
                                    <!--  В будущем кнопки наверное  -->
                                    <Border
                                        Margin="0,2,3,0"
                                        Padding="8,2"
                                        Background="{DynamicResource InstanceFormTagSolidColorBrush}"
                                        CornerRadius="5">
                                        <TextBlock
                                            FontSize="14"
                                            Foreground="{DynamicResource InstanceFormTagForegroundSolidColorBrush}"
                                            Text="{Binding Name}" />
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <!--  Tags ItemsPanel  -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <!--  Download Files Info  -->
                        <TextBlock
                            Grid.Row="2"
                            Margin="0,0,4,8"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            FontSize="14"
                            Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}">

                            <Run Text="{DynamicResource Downloaded}" />
                            <Run>
                                <Run.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DownloadingData.FilesCounts" />
                                        <Binding Path="DownloadingData.TotalFiles" />
                                    </MultiBinding>
                                </Run.Text>
                            </Run>
                            <Run Text="{DynamicResource Files_LowerCase}" />

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <!--  Скачивание Java  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Java}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Скачивание Java  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Client}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                    </Style.Triggers>

                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <!--  Download Import Speed  -->
                        <core:If
                            Grid.Row="2"
                            Margin="0,0,4,8"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Condition="{Binding IsShareDownloading}">
                            <core:If.True>
                                <TextBlock FontSize="14" Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}">
                                    <Run Text="{Binding InstanceDistribution.Speed, Mode=OneWay}" />
                                    <Run Text="Mbit/s" />
                                </TextBlock>
                            </core:If.True>

                        </core:If>

                        <ProgressBar
                            Grid.Row="1"
                            Height="5"
                            VerticalAlignment="Bottom"
                            Value="{Binding DownloadingData.Percentages}">
                            <ProgressBar.Style>
                                <Style BasedOn="{StaticResource {x:Type ProgressBar}}" TargetType="{x:Type ProgressBar}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="IsIndeterminate" Value="False" />

                                    <Style.Triggers>

                                        <!--    -->
                                        <DataTrigger Binding="{Binding IsDownloading}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>

                                        <!--  Запуск  -->
                                        <DataTrigger Binding="{Binding IsLaunching}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="IsIndeterminate" Value="True" />
                                        </DataTrigger>

                                        <!--  Отмена скачивания  -->
                                        <DataTrigger Binding="{Binding DownloadCancelling}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="IsIndeterminate" Value="True" />
                                        </DataTrigger>

                                        <!--  Подготовка к скачиванию  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Prepare}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="IsIndeterminate" Value="True" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Скачивание Java  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Java}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="IsIndeterminate" Value="False" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>

                                        <!--  Скачивание клиента  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Client}" />
                                            </MultiDataTrigger.Conditions>

                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="IsIndeterminate" Value="False" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>


                                        <DataTrigger Binding="{Binding IsShareDownloading}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="Value" Value="{Binding InstanceDistribution.Percentages}" />
                                            <Setter Property="IsIndeterminate" Value="False" />
                                        </DataTrigger>

                                    </Style.Triggers>

                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>
                </Grid>

                <!--  Right Block - Buttons  -->
                <Grid Grid.Column="2" ShowGridLines="False">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Button x:Name="PART_MainActionButton" Click="PART_MainActionButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border
                                                    x:Name="ActivityColorBorder"
                                                    Background="Transparent"
                                                    CornerRadius="0,5,0,0" />


                                                <Viewbox Height="{TemplateBinding FontSize}">
                                                    <Path
                                                        x:Name="Icon"
                                                        Fill="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                                        Stretch="Fill" />
                                                </Viewbox>
                                                <!--  Percentages  -->
                                                <TextBlock
                                                    x:Name="Percentage"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="18"
                                                    FontWeight="SemiBold"
                                                    Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                                    Text="{Binding DownloadingData.Percentages, Mode=OneWay, StringFormat='{}{0}%'}"
                                                    Visibility="Collapsed" />

                                            </Grid>

                                            <ControlTemplate.Triggers>

                                                <!--  MouseOver  -->
                                                <MultiTrigger>

                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                        <Condition Property="IsEnabled" Value="True" />
                                                    </MultiTrigger.Conditions>

                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter TargetName="ActivityColorBorder" Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
                                                    <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource BrandColorForegroundSolidColorBrush}" />
                                                    <Setter TargetName="Percentage" Property="Foreground" Value="{DynamicResource BrandColorForegroundSolidColorBrush}" />
                                                </MultiTrigger>

                                                <!--  Default Not Installed  -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding State}" Value="{x:Static instancemodel:InstanceState.Default}" />
                                                        <Condition Binding="{Binding IsInstalled}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="Icon" Property="extensions:PathExtensions.StringKeyData" Value="Download" />
                                                    <Setter Property="FontSize" Value="20" />
                                                    <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>

                                                <!--  Default Installed  -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding State}" Value="{x:Static instancemodel:InstanceState.Default}" />
                                                        <Condition Binding="{Binding IsInstalled}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="Icon" Property="extensions:PathExtensions.StringKeyData" Value="Play" />
                                                    <Setter Property="FontSize" Value="22" />
                                                    <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>

                                                <!--  Prepare  -->
                                                <DataTrigger Binding="{Binding State}" Value="{x:Static instancemodel:InstanceState.Preparing}">
                                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                                    <Setter TargetName="Percentage" Property="Text" Value="0%" />
                                                    <Setter TargetName="Percentage" Property="Visibility" Value="Visible" />
                                                    <!--  TODO: Вынести в отдельный цвет  -->
                                                    <Setter TargetName="Percentage" Property="Foreground" Value="Gray" />
                                                </DataTrigger>

                                                <!--  Java Downloading  -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                        <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Java}" />
                                                    </MultiDataTrigger.Conditions>

                                                    <Setter TargetName="Percentage" Property="Visibility" Value="Visible" />
                                                    <!--  TODO: Вынести в отдельный цвет  -->
                                                    <Setter TargetName="Percentage" Property="Foreground" Value="{DynamicResource PrimaryForegroundSolidColorBrush}" />
                                                </MultiDataTrigger>

                                                <!--  Client  -->
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDownloading}" Value="True" />
                                                        <Condition Binding="{Binding DownloadingData.Stage}" Value="{x:Static lexplosion:StageType.Client}" />
                                                    </MultiDataTrigger.Conditions>

                                                    <Setter TargetName="Percentage" Property="Visibility" Value="Visible" />
                                                    <!--  TODO: Вынести в отдельный цвет  -->
                                                    <Setter TargetName="Percentage" Property="Foreground" Value="{DynamicResource PrimaryForegroundSolidColorBrush}" />
                                                </MultiDataTrigger>

                                                <!--  Download Cancelling  -->
                                                <DataTrigger Binding="{Binding DownloadCancelling}" Value="True">
                                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                                    <Setter TargetName="Percentage" Property="Visibility" Value="Collapsed" />
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>

                                                <!--  Подготовка к скачиванию  -->
                                                <DataTrigger Binding="{Binding State}" Value="{x:Static instancemodel:InstanceState.Launching}">
                                                    <Setter TargetName="Icon" Property="extensions:PathExtensions.StringKeyData" Value="Cancel" />
                                                    <Setter Property="FontSize" Value="20" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsShareDownloading}" Value="True">
                                                    <Setter TargetName="Icon" Property="extensions:PathExtensions.StringKeyData" Value="Cancel" />
                                                    <Setter Property="FontSize" Value="20" />
                                                </DataTrigger>

                                                <!--    -->
                                                <DataTrigger Binding="{Binding IsLaunched}" Value="True">
                                                    <Setter TargetName="Icon" Property="extensions:PathExtensions.StringKeyData" Value="Cancel" />
                                                    <Setter Property="FontSize" Value="20" />
                                                </DataTrigger>

                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>

                    </Button>

                    <controls:DropdownMenu
                        x:Name="PART_DropDownMenu"
                        Grid.Row="1"
                        Background="{DynamicResource PrimarySolidColorBrush}"
                        BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                        BorderThickness="1"
                        Visibility="{Binding IsInstanceCompleted, Converter={converters:BooleanToVisibilityConverter}}">
                        <StackPanel>

                            <core:If Condition="{Binding IsDownloading}">
                                <core:If.True>

                                    <!--  Отмена скачивания  -->
                                    <controls:AdvancedButton
                                        x:Name="CancelDownloadButton"
                                        Click="CancelDownloadButton_Click"
                                        IconData="{DynamicResource PDCancel}"
                                        Template="{StaticResource DropDownButton}"
                                        Text="{DynamicResource CancelDownload}" />

                                </core:If.True>
                            </core:If>
                            <core:If Condition="{Binding IsLocal}">
                                <core:If.False>

                                    <!--  Посетить сайт  -->
                                    <controls:AdvancedButton
                                        x:Name="VisitWebsiteButton"
                                        Click="VisitWebsiteButton_Click"
                                        Template="{StaticResource DropDownButton}" />

                                </core:If.False>
                            </core:If>

                            <core:If Condition="{Binding InLibrary}">
                                <core:If.True>
                                    <StackPanel>

                                        <!--  Открыть папку  -->
                                        <controls:AdvancedButton
                                            x:Name="OpenFolderButton"
                                            Click="OpenFolderButton_Click"
                                            IconData="{DynamicResource PDFolder}"
                                            Template="{StaticResource DropDownButton}"
                                            Text="{DynamicResource OpenFolder}" />

                                        <!--  Экспорт  -->
                                        <controls:AdvancedButton
                                            x:Name="ExportButton"
                                            Click="ExportButton_Click"
                                            IconData="{DynamicResource PDExport}"
                                            Template="{StaticResource DropDownButton}"
                                            Text="{DynamicResource Export}" />

                                        <!--  Дополнения  -->
                                        <controls:AdvancedButton
                                            x:Name="OpenAddonManagerButton"
                                            Click="OpenAddonManagerButton_Click"
                                            IconData="{DynamicResource PDAddons}"
                                            Template="{StaticResource DropDownButton}"
                                            Text="{DynamicResource Addons}" />

                                        <core:If Condition="{Binding IsInstalled}">
                                            <core:If.True>

                                                <!--  Удалить  -->
                                                <controls:AdvancedButton
                                                    x:Name="DeleteButton"
                                                    Click="DeleteButton_Click"
                                                    IconData="{DynamicResource PDDelete}"
                                                    Template="{StaticResource DropDownButton}"
                                                    Text="{DynamicResource DeleteInstance}" />

                                            </core:If.True>
                                            <core:If.False>

                                                <!--  Удалить из библиотеки  -->
                                                <controls:AdvancedButton
                                                    x:Name="DeleteFromLibraryButton"
                                                    Click="DeleteFromLibraryButton_Click"
                                                    IconData="{DynamicResource PDDelete}"
                                                    Template="{StaticResource DropDownButton}"
                                                    Text="{DynamicResource RemoveFromLibrary}" />

                                            </core:If.False>
                                        </core:If>
                                    </StackPanel>
                                </core:If.True>
                                <core:If.False>

                                    <!--  Добавить в библиотеку  -->
                                    <controls:AdvancedButton
                                        x:Name="AddToLibraryButton"
                                        Click="AddToLibraryButton_Click"
                                        IconData="{DynamicResource PDAddToLibrary}"
                                        Template="{StaticResource DropDownButton}"
                                        Text="{DynamicResource AddToLibrary}" />

                                </core:If.False>
                            </core:If>
                        </StackPanel>
                    </controls:DropdownMenu>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
