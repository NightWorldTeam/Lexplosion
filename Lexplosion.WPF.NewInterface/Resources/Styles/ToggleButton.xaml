<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:extensions="clr-namespace:Lexplosion.WPF.NewInterface.Extensions">

    <Style x:Key="SwitchButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Border"
                        Width="40"
                        Height="20"
                        Padding="3"
                        Background="Transparent"
                        BorderBrush="{DynamicResource LatestForegroundSolidColorBrush}"
                        BorderThickness="2"
                        CornerRadius="10">
                        <Border
                            x:Name="c"
                            Width="10"
                            Height="10"
                            Margin="0"
                            HorizontalAlignment="Left"
                            Background="{DynamicResource LatestForegroundSolidColorBrush}"
                            CornerRadius="12" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="c"
                                            Storyboard.TargetProperty="Margin"
                                            From="0"
                                            To="20,0,0,0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="c"
                                            Storyboard.TargetProperty="Margin"
                                            From="20,0,0,0"
                                            To="0,0,0,0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActivitySolidColorBrush}" />
                            <Setter TargetName="c" Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LatestForegroundSolidColorBrush}" />
                            <Setter TargetName="c" Property="Background" Value="{DynamicResource LatestForegroundSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EllipseToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="Transparent">
                        <Grid>
                            <Border
                                x:Name="rect"
                                Width="10.5"
                                Height="9"
                                HorizontalAlignment="Left"
                                Background="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                CornerRadius="3,0,0,3" />
                            <Border
                                x:Name="ellipse"
                                Width="15"
                                Height="15"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Right"
                                Background="Transparent"
                                BorderBrush="{DynamicResource SecondaryForegroundSolidColorBrush}"
                                BorderThickness="2"
                                CornerRadius="1000" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="Border.BorderBrush" Value="{DynamicResource ActivitySolidColorBrush}" />
                            <Setter TargetName="ellipse" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="rect" Property="Border.Background" Value="{DynamicResource ActivitySolidColorBrush}" />
                            <Setter TargetName="rect" Property="Border.CornerRadius" Value="0,3,3,0" />
                            <Setter TargetName="rect" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="Transparent"
                        CornerRadius="5">
                        <Viewbox Height="16">
                            <Path
                                x:Name="IconPath"
                                extensions:PathExtensions.StringKeyData="{TemplateBinding Content}"
                                Fill="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                Stretch="Fill" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IconPath" Property="Path.Fill" Value="{DynamicResource ActivitySolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimarySolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="IconPath" Property="Path.Fill" Value="{DynamicResource DisableControlIconSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Filter Panel  -->

    <Style x:Key="FilterIconToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Content" Value="Filter" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Padding="10"
                            Background="{DynamicResource PrimarySolidColorBrush}"
                            BorderBrush="{DynamicResource SeparateSolidColorBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <Viewbox>
                                <Path
                                    x:Name="Icon"
                                    extensions:PathExtensions.StringKeyData="{TemplateBinding Content}"
                                    Fill="{DynamicResource PrimaryForegroundSolidColorBrush}"
                                    Stretch="Fill" />
                            </Viewbox>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ActivitySolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Filter Panel Category  -->
    <Style x:Key="CategoryToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="borderBackground"
                            Background="{DynamicResource ActivitySolidColorBrush}"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="5"
                            Opacity="0" />

                        <Border
                            x:Name="border"
                            Padding="4"
                            Background="Transparent"
                            BorderBrush="{DynamicResource LatestForegroundSolidColorBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <TextBlock
                                x:Name="textblock"
                                Foreground="{DynamicResource LatestForegroundSolidColorBrush}"
                                Text="{TemplateBinding Content}" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="borderBackground" Property="Opacity" Value="0.2" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActivitySolidColorBrush}" />
                            <Setter TargetName="textblock" Property="Foreground" Value="{DynamicResource ActivitySolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>