<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:extensions="clr-namespace:Lexplosion.WPF.NewInterface.Extensions"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Fill="Black"
                        Opacity="0.1"
                        SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBasedStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisualStyle}" />
    </Style>

    <Style
        x:Key="{x:Type Button}"
        BasedOn="{StaticResource ButtonBasedStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource BrandColorForegroundSolidColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="BorderHover"
                            Background="Black"
                            CornerRadius="5" />

                        <!--  Content  -->
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5" />

                        <Border Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </Grid>

                    <!--  Triggers  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.9"
                                            Duration="0:0:0.35" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.35" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ColoredWindowsButton"
        BasedOn="{StaticResource ButtonBasedStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#17181c" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Ellipse
                            x:Name="Hover"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Fill="Black"
                            SnapsToDevicePixels="True"
                            Stroke="Transparent"
                            StrokeThickness="2" />

                        <Ellipse
                            x:Name="Ellipse"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Fill="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            StrokeThickness="1">
                            <Ellipse.Stroke>
                                <SolidColorBrush Opacity="0.1" Color="{TemplateBinding Background}" />
                            </Ellipse.Stroke>
                        </Ellipse>

                        <ContentPresenter x:Name="Content" Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseOverAnimation">
                            <DoubleAnimation
                                Storyboard.TargetName="Ellipse"
                                Storyboard.TargetProperty="Opacity"
                                To="0.8"
                                Duration="0:0:0.35" />
                        </Storyboard>

                        <Storyboard x:Key="MouseOutAnimation">
                            <DoubleAnimation
                                Storyboard.TargetName="Ellipse"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.35" />
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Content" Property="Visibility" Value="Visible" />

                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseOverAnimation}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MouseOutAnimation}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="x32IconButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BrandColorForegroundSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="8"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <Viewbox Height="{TemplateBinding FontSize}">
                            <Path
                                extensions:PathExtensions.StringKeyData="{TemplateBinding Content}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill" />
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="x32IconButtonActivityColor" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ActivitySolidColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="32"
                            Height="32"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="5"
                            Opacity="0.1" />

                        <Viewbox Height="{TemplateBinding FontSize}">
                            <Path
                                extensions:PathExtensions.StringKeyData="{TemplateBinding Content}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill" />
                        </Viewbox>

                        <Border
                            x:Name="HoveredBorder"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Opacity="0">

                            <Border.Background>
                                <SolidColorBrush Opacity="0.4" Color="{TemplateBinding Foreground}" />
                            </Border.Background>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoveredBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoveredBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="x32DefaultIconButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="6"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextBlock.TextDecorations" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        CornerRadius="5">
                        <TextBlock
                            x:Name="ContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenter" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  Ghost Button  -->

    <!--  TODO: Hover Animation  -->
    <Style x:Key="GhostButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{DynamicResource ActivitySolidColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Height="32"
                        HorizontalAlignment="Stretch"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding Background}"
                        BorderThickness="1"
                        CornerRadius="5">

                        <Grid>
                            <Border
                                x:Name="HoveredBorderBackground"
                                Background="{TemplateBinding Background}"
                                Opacity="0" />
                            <ContentPresenter
                                Margin="16,8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextBlock.Foreground="{TemplateBinding Background}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoveredBorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="0.2"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoveredBorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.2"
                                            To="0"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyButtonPattern" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TODO: сделать отдельный control для icon button  -->
    <Style x:Key="x32IconButtonWithHover" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundSolidColorBrush}" />
        <Setter Property="Width" Value="32" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Path
                                x:Name="IconPath"
                                extensions:PathExtensions.StringKeyData="{TemplateBinding Content}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill" />
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconPath" Property="Path.Fill" Value="{DynamicResource ActivitySolidColorBrush}" />
                            <Setter TargetName="IconPath" Property="Path.Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>